// Automatically generated by MockGen. DO NOT EDIT!
// Source: authentication.go

package mocks

import (
	models "jobtracker/app/models"

	gomock "github.com/golang/mock/gomock"
)

// Mock of AuthService interface
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthServiceRecorder
}

// Recorder for MockAuthService (not exported)
type _MockAuthServiceRecorder struct {
	mock *MockAuthService
}

func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &_MockAuthServiceRecorder{mock}
	return mock
}

func (_m *MockAuthService) EXPECT() *_MockAuthServiceRecorder {
	return _m.recorder
}

func (_m *MockAuthService) Create(user models.User, password string) error {
	ret := _m.ctrl.Call(_m, "Create", user, password)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthServiceRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0, arg1)
}

func (_m *MockAuthService) Authenticate(email string, password string) (*models.User, error) {
	ret := _m.ctrl.Call(_m, "Authenticate", email, password)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockAuthServiceRecorder) Authenticate(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Authenticate", arg0, arg1)
}

// Mock of PasswordHasher interface
type MockPasswordHasher struct {
	ctrl     *gomock.Controller
	recorder *_MockPasswordHasherRecorder
}

// Recorder for MockPasswordHasher (not exported)
type _MockPasswordHasherRecorder struct {
	mock *MockPasswordHasher
}

func NewMockPasswordHasher(ctrl *gomock.Controller) *MockPasswordHasher {
	mock := &MockPasswordHasher{ctrl: ctrl}
	mock.recorder = &_MockPasswordHasherRecorder{mock}
	return mock
}

func (_m *MockPasswordHasher) EXPECT() *_MockPasswordHasherRecorder {
	return _m.recorder
}

func (_m *MockPasswordHasher) New(password string) string {
	ret := _m.ctrl.Call(_m, "New", password)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockPasswordHasherRecorder) New(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "New", arg0)
}

func (_m *MockPasswordHasher) Verify(hash string, password string) bool {
	ret := _m.ctrl.Call(_m, "Verify", hash, password)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockPasswordHasherRecorder) Verify(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Verify", arg0, arg1)
}
